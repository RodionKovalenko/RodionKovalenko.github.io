{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ViewEncapsulation, OnInit, AfterViewInit, ViewChild, SimpleChanges, Input } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements OnInit {\n  // total time elapsed after timer was started\n  timeElapsed: any;\n  // time at which timer was stopped\n  stoppedTimer: any;\n  // sound to signal \n  audio: any;\n  webWorker: any;\n  // time display on the screen\n  timerDisplay: {\n    hours: any,\n    minutes: any,\n    seconds: any\n  }\n  isResetButtonVisible = false;\n\n  buttonState = {\n    START_TIMER: 'Start Timer',\n    STOP_TIMER: 'Stop Timer',\n    RESUME_TIMER: 'Resume Timer',\n    RESET_TIMER: 'Reset Timer'\n  }\n\n  @ViewChild('startButton') startButton;\n  @ViewChild('resetButton') resetButton;\n  @Input() timeIntervalForSound: any;\n\n  constructor(private _snackBar: MatSnackBar) {\n    this.audio = new Audio('assets/mp3/test.mp3');\n    this.timerDisplay = {\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    }\n\n    this.stoppedTimer = null;\n    // default time interval for sound \n    this.timeIntervalForSound = 55;\n  }\n\n  onTimerClick(event: any) {\n    if (this.startButton._elementRef.nativeElement.innerText === this.buttonState.START_TIMER\n      || this.startButton._elementRef.nativeElement.innerText === this.buttonState.RESUME_TIMER) {\n\n      this.startButton._elementRef.nativeElement.innerText = this.buttonState.STOP_TIMER;\n      this.isResetButtonVisible = false;\n\n      if (this.audio) {       \n        setTimeout(() => {\n          this.audio.play();\n          this.audio.pause();\n          this.audio.currentTime = 0;\n        }, 100);\n      }\n\n      this.startWorker();\n    }\n\n    else if (this.startButton._elementRef.nativeElement.innerText === this.buttonState.STOP_TIMER\n      || this.startButton._elementRef.nativeElement.innerText === this.buttonState.RESUME_TIMER) {\n      this.stoppedTimer = this.timeElapsed;\n      this.isResetButtonVisible = true;\n\n      if (this.stoppedTimer) {\n        this.startButton._elementRef.nativeElement.innerText === this.buttonState.RESUME_TIMER ?\n          this.startButton._elementRef.nativeElement.innerText = this.buttonState.STOP_TIMER :\n          this.startButton._elementRef.nativeElement.innerText = this.buttonState.RESUME_TIMER;\n      } else {\n        this.startButton._elementRef.nativeElement.innerText = this.buttonState.START_TIMER;\n      }\n      this.terminateWorker();\n    }\n  }\n\n  onResetTimer(event: any) {\n    this.stoppedTimer = null;\n    this.terminateWorker();\n    this.isResetButtonVisible = false;\n    this.timeElapsed = 0;\n    this.setDisplayValues();\n    this.startButton._elementRef.nativeElement.innerText = this.buttonState.START_TIMER;\n  }\n\n  initializeServiceWorker() {\n    if (typeof (Worker) !== \"undefined\") {\n      if (typeof (this.webWorker) == \"undefined\") {\n        this.webWorker = new Worker(\"assets/demo-worker.js\");\n        console.log('web-worker initialized');\n      }\n      this.webWorker.onmessage = this.onTimerMessageEvent.bind(this);\n    } else {\n      this.showToastMessage('not supported', 'Sorry, your browser does not support Web Workers', 5000);\n    }\n  }\n\n  startWorker() {\n    this.initializeServiceWorker();\n  }\n\n  terminateWorker() {\n    if (this.webWorker) {\n      this.webWorker.terminate();\n      this.webWorker = undefined;\n    }\n  }\n\n  onTimerMessageEvent(event) {\n    this.timeElapsed = event.data;\n\n    if (this.stoppedTimer) {\n      this.timeElapsed += this.stoppedTimer;\n    }\n\n    this.setDisplayValues();\n\n    if (parseInt(this.timerDisplay.seconds) % (this.timeIntervalForSound) === 0 && parseInt(this.timerDisplay.seconds) !== 0) {\n\n      if (this.audio) {\n        this.audio.play();\n\n        setTimeout(() => {\n          this.audio.pause();\n          this.audio.currentTime = 0;\n        }, 4000);\n      }\n    }\n  };\n\n  setDisplayValues() {\n    let seconds = this.timeElapsed / 1000;\n    let minutes = Math.floor(seconds / 60);\n    let hours = Math.floor(minutes / 60);\n\n    // display seconds together with milliseconds rounded by 2 digits after comma \n    this.timerDisplay.seconds = (seconds % 60).toFixed(2);\n    this.timerDisplay.minutes = minutes % 60;\n    this.timerDisplay.hours = hours % 60;\n  }\n\n  ngOnInit(): void { }\n\n  showToastMessage(title, message, duration) {\n    this._snackBar.open(title, message, { duration: duration, direction: 'ltr', verticalPosition: 'top' });\n  }\n}\n","<div class=\"toolbar\" role=\"banner\">\n    Stopwatch app\n</div>\n\n<div class=\"content\">\n\n    <p>\n        stopwatch with time interval sound\n    </p>\n\n    <form class=\"example-form\">\n        <mat-form-field class=\"example-full-width\" style=\"min-width:350px; text-align: center;\">\n            <mat-label> Define time-interval after which sound will appear </mat-label>\n            <input matInput placeholder=\"in seconds\" [(ngModel)]=\"timeIntervalForSound\" ngModel\n                [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n    </form>\n\n    <p>Timer: {{ timerDisplay?.hours}}:\n        {{ timerDisplay?.minutes}}:\n        {{ timerDisplay?.seconds}}\n    </p>\n\n    <button mat-button (click)=\"onTimerClick($event)\" #startButton> Start Timer </button>\n    <button mat-button (click)=\"onResetTimer($event)\" #resetButton *ngIf=\"this.isResetButtonVisible\"> Reset Timer </button>\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from \"@angular/common\";\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    CommonModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}