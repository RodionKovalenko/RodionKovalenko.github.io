{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/stopwatch/stopwatch.component.ts","webpack:///src/app/stopwatch/stopwatch.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","register","enabled","production","declarations","providers","bootstrap","StopwatchComponent","_snackBar","isResetButtonVisible","numberFormatError","buttonState","START_TIMER","STOP_TIMER","RESUME_TIMER","RESET_TIMER","noSleep","audio","Audio","timerDisplay","hours","minutes","seconds","stoppedTimer","timeIntervalForSound","event","startButton","_elementRef","nativeElement","innerText","timerCmp","className","setTimeout","play","pause","currentTime","enable","startWorker","timeElapsed","disable","terminateWorker","setDisplayValues","Worker","timerWorker","onmessage","onTimerMessageEvent","bind","showToastMessage","initializeServiceWorker","terminate","undefined","data","isNaN","totalNumberOfSeconds","Number","parseInt","toString","Math","floor","toFixed","message","duration","open","direction","verticalPosition","onTimerClick","encapsulation","None","environment","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StopwatchComponent } from './stopwatch/stopwatch.component';\n\n\nconst routes: Routes = [\n  { path: 'stopwatch', component: StopwatchComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n }\n","import { Component} from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title: any = 'Npo App'\n}\n","<div class=\"toolbar\" role=\"banner\">\n\n    <!-- menu -->\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n        <mat-icon>menu</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item>           \n            <a routerLink=\"./stopwatch\">stopwatch</a>\n        </button>\n        <button mat-menu-item>\n            <span>image recognition</span>\n        </button>\n        <button mat-menu-item>\n            <span>statistics</span>\n        </button>\n    </mat-menu>\n\n    <!-- menu title -->\n    {{title}}\n\n</div>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from \"@angular/common\";\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { StopwatchComponent } from './stopwatch/stopwatch.component';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatIconModule} from '@angular/material/icon';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StopwatchComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    CommonModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatMenuModule,\n    MatIconModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n }\n","import { Component, ViewEncapsulation, OnInit, AfterViewInit, ViewChild, SimpleChanges, Input } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport * as noSleep from 'nosleep.js';\n\n@Component({\n  selector: 'app-stopwatch',\n  templateUrl: './stopwatch.component.html',\n  styleUrls: ['./stopwatch.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class StopwatchComponent {\n  // total time elapsed after timer was started\n  timeElapsed: any;\n  // time at which timer was stopped\n  stoppedTimer: any;\n  // sound to signal \n  audio: any;\n  timerWorker: any;\n  noSleep: any;\n\n  // time display on the screen\n  timerDisplay: {\n    hours: any,\n    minutes: any,\n    seconds: any\n  }\n  isResetButtonVisible = false;\n  numberFormatError = false;\n  wakeLock: any;\n\n  buttonState = {\n    START_TIMER: 'Start Timer',\n    STOP_TIMER: 'Stop Timer',\n    RESUME_TIMER: 'Resume Timer',\n    RESET_TIMER: 'Reset Timer'\n  }\n\n  @ViewChild('startButton') startButton;\n  @ViewChild('resetButton') resetButton;\n  @ViewChild('timerCmp') timerCmp;\n  @Input() timeIntervalForSound: any;\n\n  constructor(private _snackBar: MatSnackBar) {\n    this.noSleep = new noSleep();\n    this.audio = new Audio('assets/mp3/test.mp3');\n    this.timerDisplay = {\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    }\n\n    this.stoppedTimer = null;\n    // default time interval for sound \n    this.timeIntervalForSound = 30;\n\n  }\n\n  onTimerClick(event: any) {\n    if (this.startButton._elementRef.nativeElement.innerText === this.buttonState.START_TIMER\n      || this.startButton._elementRef.nativeElement.innerText === this.buttonState.RESUME_TIMER) {\n\n      this.startButton._elementRef.nativeElement.innerText = this.buttonState.STOP_TIMER;\n      this.isResetButtonVisible = false;\n      this.timerCmp.nativeElement.className = 'color-change';\n\n      if (this.audio) {\n        setTimeout(() => {\n          this.audio.play();\n          this.audio.pause();\n          this.audio.currentTime = 0;\n        }, 100);\n      }\n\n      this.noSleep.enable();\n      this.startWorker();\n    }\n\n    else if (this.startButton._elementRef.nativeElement.innerText === this.buttonState.STOP_TIMER\n      || this.startButton._elementRef.nativeElement.innerText === this.buttonState.RESUME_TIMER) {\n      this.stoppedTimer = this.timeElapsed;\n      this.isResetButtonVisible = true;\n      this.noSleep.disable();\n      this.timerCmp.nativeElement.className = '';\n\n      if (this.stoppedTimer) {\n        this.startButton._elementRef.nativeElement.innerText === this.buttonState.RESUME_TIMER ?\n          this.startButton._elementRef.nativeElement.innerText = this.buttonState.STOP_TIMER :\n          this.startButton._elementRef.nativeElement.innerText = this.buttonState.RESUME_TIMER;\n      } else {\n        this.startButton._elementRef.nativeElement.innerText = this.buttonState.START_TIMER;\n      }\n      this.terminateWorker();\n    }\n  }\n\n  onResetTimer(event: any) {\n    this.stoppedTimer = null;\n    this.terminateWorker();\n    this.isResetButtonVisible = false;\n    this.timeElapsed = 0;\n    this.setDisplayValues();\n    this.startButton._elementRef.nativeElement.innerText = this.buttonState.START_TIMER;\n  }\n\n  initializeServiceWorker() {\n    if (typeof (Worker) !== \"undefined\") {\n      if (typeof (this.timerWorker) == \"undefined\") {\n        this.timerWorker = new Worker('assets/timer-worker.js');\n      }\n      this.timerWorker.onmessage = this.onTimerMessageEvent.bind(this);\n    } else {\n      this.showToastMessage('not supported', 'Sorry, your browser does not support Web Workers', 5000);\n    }\n  }\n\n  startWorker() {\n    this.initializeServiceWorker();\n  }\n\n  terminateWorker() {\n    if (this.timerWorker) {\n      this.timerWorker.terminate();\n      this.timerWorker = undefined;\n    }\n  }\n\n  onTimerMessageEvent(event) {\n    this.timeElapsed = event.data;\n\n    if (this.stoppedTimer) {\n      this.timeElapsed += this.stoppedTimer;\n    }\n\n    this.setDisplayValues();\n\n    if (isNaN(this.timeIntervalForSound) && !this.numberFormatError) {\n      this.numberFormatError = true;\n      this.showToastMessage('Wrong number format', 'Please give your number in seconds', 5000);\n      setTimeout(() => {\n        this.numberFormatError = false;\n      }, 5000);\n\n    }\n\n    let totalNumberOfSeconds = Number(this.timerDisplay.seconds) + Number((this.timerDisplay.minutes * 60)) + Number((this.timerDisplay.hours * 3600));\n\n\n    if (!isNaN(this.timeIntervalForSound) && (parseInt(totalNumberOfSeconds.toString()) % (this.timeIntervalForSound)) === 0\n      && (this.timerDisplay.minutes !== 0 || (this.timeIntervalForSound < 60 && Math.floor(this.timerDisplay.seconds) !== 0))) {\n\n      if (this.audio) {\n        this.audio.play();\n\n        setTimeout(() => {\n          this.audio.pause();\n          this.audio.currentTime = 0;\n        }, 4000);\n      }\n    }\n  };\n\n  setDisplayValues() {\n    let seconds = this.timeElapsed / 1000;\n    let minutes = Math.floor(seconds / 60);\n    let hours = Math.floor(minutes / 60);\n\n    // display seconds together with milliseconds rounded by 2 digits after comma \n    this.timerDisplay.seconds = (seconds % 60).toFixed(2);\n    this.timerDisplay.minutes = minutes % 60;\n    this.timerDisplay.hours = hours % 60;\n  }\n\n  showToastMessage(title, message, duration) {\n    this._snackBar.open(title, message, { duration: duration, direction: 'ltr', verticalPosition: 'top' });\n  }\n\n}\n","<div class=\"content\">\n\n    <p>\n        stopwatch with time interval sound\n    </p>\n\n    <form class=\"example-form\">\n        <mat-form-field class=\"example-full-width\" style=\"min-width:350px; text-align: center;\">\n            <mat-label> Define time-interval after which sound will appear </mat-label>\n            <input matInput placeholder=\"in seconds\" [(ngModel)]=\"timeIntervalForSound\" ngModel [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n    </form>\n\n    <p #timerCmp style=\"font-size: 25px;\">\n        Timer: {{ timerDisplay?.hours}}:{{ timerDisplay?.minutes}}:{{ timerDisplay?.seconds}}\n    </p>\n\n    <button mat-button (click)=\"onTimerClick($event)\" #startButton> Start Timer </button>\n\n    <button style=\"margin: 20px;\" mat-button (click)=\"onResetTimer($event)\" #resetButton *ngIf=\"this.isResetButtonVisible\"> Reset Timer </button>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}