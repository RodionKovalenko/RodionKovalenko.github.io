{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","_snackBar","isResetButtonVisible","buttonState","START_TIMER","STOP_TIMER","RESUME_TIMER","RESET_TIMER","audio","Audio","timerDisplay","hours","minutes","seconds","stoppedTimer","timeIntervalForSound","event","startButton","_elementRef","nativeElement","innerText","setTimeout","play","pause","currentTime","startWorker","timeElapsed","terminateWorker","setDisplayValues","Worker","webWorker","console","log","onmessage","onTimerMessageEvent","bind","showToastMessage","initializeServiceWorker","terminate","undefined","data","parseInt","Math","floor","toFixed","title","message","duration","open","direction","verticalPosition","onTimerClick","selector","templateUrl","styleUrls","encapsulation","None","AppModule","register","enabled","production","declarations","imports","providers","bootstrap","environment","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ViewEncapsulation, OnInit, AfterViewInit, ViewChild, SimpleChanges, Input } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements OnInit {\n  // total time elapsed after timer was started\n  timeElapsed: any;\n  // time at which timer was stopped\n  stoppedTimer: any;\n  // sound to signal \n  audio: any;\n  webWorker: any;\n  // time display on the screen\n  timerDisplay: {\n    hours: any,\n    minutes: any,\n    seconds: any\n  }\n  isResetButtonVisible = false;\n\n  buttonState = {\n    START_TIMER: 'Start Timer',\n    STOP_TIMER: 'Stop Timer',\n    RESUME_TIMER: 'Resume Timer',\n    RESET_TIMER: 'Reset Timer'\n  }\n\n  @ViewChild('startButton') startButton;\n  @ViewChild('resetButton') resetButton;\n  @Input() timeIntervalForSound: any;\n\n  constructor(private _snackBar: MatSnackBar) {\n    this.audio = new Audio('assets/mp3/test.mp3');\n    this.timerDisplay = {\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    }\n\n    this.stoppedTimer = null;\n    // default time interval for sound \n    this.timeIntervalForSound = 55;\n  }\n\n  onTimerClick(event: any) {\n    if (this.startButton._elementRef.nativeElement.innerText === this.buttonState.START_TIMER\n      || this.startButton._elementRef.nativeElement.innerText === this.buttonState.RESUME_TIMER) {\n\n      this.startButton._elementRef.nativeElement.innerText = this.buttonState.STOP_TIMER;\n      this.isResetButtonVisible = false;\n\n      if (this.audio) {       \n        setTimeout(() => {\n          this.audio.play();\n          this.audio.pause();\n          this.audio.currentTime = 0;\n        }, 100);\n      }\n\n      this.startWorker();\n    }\n\n    else if (this.startButton._elementRef.nativeElement.innerText === this.buttonState.STOP_TIMER\n      || this.startButton._elementRef.nativeElement.innerText === this.buttonState.RESUME_TIMER) {\n      this.stoppedTimer = this.timeElapsed;\n      this.isResetButtonVisible = true;\n\n      if (this.stoppedTimer) {\n        this.startButton._elementRef.nativeElement.innerText === this.buttonState.RESUME_TIMER ?\n          this.startButton._elementRef.nativeElement.innerText = this.buttonState.STOP_TIMER :\n          this.startButton._elementRef.nativeElement.innerText = this.buttonState.RESUME_TIMER;\n      } else {\n        this.startButton._elementRef.nativeElement.innerText = this.buttonState.START_TIMER;\n      }\n      this.terminateWorker();\n    }\n  }\n\n  onResetTimer(event: any) {\n    this.stoppedTimer = null;\n    this.terminateWorker();\n    this.isResetButtonVisible = false;\n    this.timeElapsed = 0;\n    this.setDisplayValues();\n    this.startButton._elementRef.nativeElement.innerText = this.buttonState.START_TIMER;\n  }\n\n  initializeServiceWorker() {\n    if (typeof (Worker) !== \"undefined\") {\n      if (typeof (this.webWorker) == \"undefined\") {\n        this.webWorker = new Worker(\"assets/demo-worker.js\");\n        console.log('web-worker initialized');\n      }\n      this.webWorker.onmessage = this.onTimerMessageEvent.bind(this);\n    } else {\n      this.showToastMessage('not supported', 'Sorry, your browser does not support Web Workers', 5000);\n    }\n  }\n\n  startWorker() {\n    this.initializeServiceWorker();\n  }\n\n  terminateWorker() {\n    if (this.webWorker) {\n      this.webWorker.terminate();\n      this.webWorker = undefined;\n    }\n  }\n\n  onTimerMessageEvent(event) {\n    this.timeElapsed = event.data;\n\n    if (this.stoppedTimer) {\n      this.timeElapsed += this.stoppedTimer;\n    }\n\n    this.setDisplayValues();\n\n    if (parseInt(this.timerDisplay.seconds) % (this.timeIntervalForSound) === 0 && parseInt(this.timerDisplay.seconds) !== 0) {\n\n      if (this.audio) {\n        this.audio.play();\n\n        setTimeout(() => {\n          this.audio.pause();\n          this.audio.currentTime = 0;\n        }, 4000);\n      }\n    }\n  };\n\n  setDisplayValues() {\n    let seconds = this.timeElapsed / 1000;\n    let minutes = Math.floor(seconds / 60);\n    let hours = Math.floor(minutes / 60);\n\n    // display seconds together with milliseconds rounded by 2 digits after comma \n    this.timerDisplay.seconds = (seconds % 60).toFixed(2);\n    this.timerDisplay.minutes = minutes % 60;\n    this.timerDisplay.hours = hours % 60;\n  }\n\n  ngOnInit(): void { }\n\n  showToastMessage(title, message, duration) {\n    this._snackBar.open(title, message, { duration: duration, direction: 'ltr', verticalPosition: 'top' });\n  }\n}\n","<div class=\"toolbar\" role=\"banner\">\n    Stopwatch app\n</div>\n\n<div class=\"content\">\n\n    <p>\n        stopwatch with time interval sound\n    </p>\n\n    <form class=\"example-form\">\n        <mat-form-field class=\"example-full-width\" style=\"min-width:350px; text-align: center;\">\n            <mat-label> Define time-interval after which sound will appear </mat-label>\n            <input matInput placeholder=\"in seconds\" [(ngModel)]=\"timeIntervalForSound\" ngModel\n                [ngModelOptions]=\"{standalone: true}\">\n        </mat-form-field>\n    </form>\n\n    <p>Timer: {{ timerDisplay?.hours}}:\n        {{ timerDisplay?.minutes}}:\n        {{ timerDisplay?.seconds}}\n    </p>\n\n    <button mat-button (click)=\"onTimerClick($event)\" #startButton> Start Timer </button>\n    <button mat-button (click)=\"onResetTimer($event)\" #resetButton *ngIf=\"this.isResetButtonVisible\"> Reset Timer </button>\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from \"@angular/common\";\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    CommonModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}